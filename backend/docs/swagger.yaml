basePath: /
definitions:
  models.AuthResponse:
    properties:
      access_token:
        type: string
    type: object
  models.ClassificationResponse:
    properties:
      performed_date:
        type: string
      prediction:
        type: string
      retinography:
        items:
          type: integer
        type: array
    type: object
  models.CreateClassificationRequest:
    properties:
      patient_id:
        type: string
      retinography:
        items:
          type: integer
        type: array
    type: object
  models.CreateDoctorRequest:
    properties:
      birthday:
        type: string
      crm:
        type: string
      name:
        type: string
      user:
        $ref: '#/definitions/models.User'
    type: object
  models.CreatePatientRequest:
    properties:
      birthday:
        type: string
      name:
        type: string
      user:
        $ref: '#/definitions/models.User'
    type: object
  models.HealthyResponse:
    properties:
      is_healthy:
        type: boolean
    type: object
  models.User:
    properties:
      email:
        type: string
      id:
        type: string
      password:
        type: string
    type: object
host: localhost:8034
info:
  contact: {}
  description: Endpoints of Retinaguard API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Retinaguard
  version: "1.0"
paths:
  /api/classification:
    post:
      consumes:
      - application/json
      description: Create Classification
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.CreateClassificationRequest'
      summary: Create Classification
      tags:
      - Classification
  /api/classifications:
    get:
      consumes:
      - application/json
      description: Get List Of Classifications By Patient
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ClassificationResponse'
      summary: Get Classifications
      tags:
      - Classification
  /api/doctor:
    post:
      consumes:
      - application/json
      description: Create doctor
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.CreateDoctorRequest'
      summary: Create Doctor
      tags:
      - Create Doctor Handler
  /api/healthy:
    get:
      consumes:
      - application/json
      description: Check if application if healthy
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.HealthyResponse'
      summary: Check healthy
      tags:
      - Healthy Handler
  /api/login:
    post:
      consumes:
      - application/json
      description: Get your access token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthResponse'
      summary: Get access token
      tags:
      - Login
  /api/patient:
    post:
      consumes:
      - application/json
      description: Create patient
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.CreatePatientRequest'
      summary: Create patient
      tags:
      - Create Patient Handler
swagger: "2.0"
